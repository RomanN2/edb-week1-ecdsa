{
  "version": 3,
  "sources": ["../../ethereum-cryptography/esm/utils.js"],
  "sourcesContent": ["import assert from \"@noble/hashes/_assert\";\nimport { hexToBytes as _hexToBytes } from \"@noble/hashes/utils\";\nconst assertBool = assert.bool;\nconst assertBytes = assert.bytes;\nexport { assertBool, assertBytes };\nexport { bytesToHex, bytesToHex as toHex, concatBytes, createView, utf8ToBytes } from \"@noble/hashes/utils\";\n// buf.toString('utf8') -> bytesToUtf8(buf)\nexport function bytesToUtf8(data) {\n    if (!(data instanceof Uint8Array)) {\n        throw new TypeError(`bytesToUtf8 expected Uint8Array, got ${typeof data}`);\n    }\n    return new TextDecoder().decode(data);\n}\nexport function hexToBytes(data) {\n    const sliced = data.startsWith(\"0x\") ? data.substring(2) : data;\n    return _hexToBytes(sliced);\n}\n// buf.equals(buf2) -> equalsBytes(buf, buf2)\nexport function equalsBytes(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n// Internal utils\nexport function wrapHash(hash) {\n    return (msg) => {\n        assert.bytes(msg);\n        return hash(msg);\n    };\n}\n// TODO(v3): switch away from node crypto, remove this unnecessary variable.\nexport const crypto = (() => {\n    const webCrypto = typeof globalThis === \"object\" && \"crypto\" in globalThis ? globalThis.crypto : undefined;\n    const nodeRequire = typeof module !== \"undefined\" &&\n        typeof module.require === \"function\" &&\n        module.require.bind(module);\n    return {\n        node: nodeRequire && !webCrypto ? nodeRequire(\"crypto\") : undefined,\n        web: webCrypto\n    };\n})();\n"],
  "mappings": ";;;;;;AAEA,IAAM,aAAa,eAAO;AAC1B,IAAM,cAAc,eAAO;AAIpB,SAAS,YAAY,MAAM;AAC9B,MAAI,EAAE,gBAAgB,aAAa;AAC/B,UAAM,IAAI,UAAU,wCAAwC,OAAO,IAAI,EAAE;AAAA,EAC7E;AACA,SAAO,IAAI,YAAY,EAAE,OAAO,IAAI;AACxC;AACO,SAASA,YAAW,MAAM;AAC7B,QAAM,SAAS,KAAK,WAAW,IAAI,IAAI,KAAK,UAAU,CAAC,IAAI;AAC3D,SAAO,WAAY,MAAM;AAC7B;AAEO,SAAS,YAAY,GAAG,GAAG;AAC9B,MAAI,EAAE,WAAW,EAAE,QAAQ;AACvB,WAAO;AAAA,EACX;AACA,WAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AAC/B,QAAI,EAAE,CAAC,MAAM,EAAE,CAAC,GAAG;AACf,aAAO;AAAA,IACX;AAAA,EACJ;AACA,SAAO;AACX;AAEO,SAAS,SAAS,MAAM;AAC3B,SAAO,CAAC,QAAQ;AACZ,mBAAO,MAAM,GAAG;AAChB,WAAO,KAAK,GAAG;AAAA,EACnB;AACJ;AAEO,IAAM,UAAU,MAAM;AACzB,QAAM,YAAY,OAAO,eAAe,YAAY,YAAY,aAAa,WAAW,SAAS;AACjG,QAAM,cAAc,OAAO,WAAW,eAClC,OAAO,OAAO,YAAY,cAC1B,OAAO,QAAQ,KAAK,MAAM;AAC9B,SAAO;AAAA,IACH,MAAM,eAAe,CAAC,YAAY,YAAY,QAAQ,IAAI;AAAA,IAC1D,KAAK;AAAA,EACT;AACJ,GAAG;",
  "names": ["hexToBytes"]
}
